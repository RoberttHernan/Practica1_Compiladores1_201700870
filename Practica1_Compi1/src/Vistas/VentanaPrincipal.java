/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Analizador.AnalizadorLexico;
import Analizador.AnalizadorLexico2;
import Analizador.Token;
import Analizador.Token2;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import juego.Tetris;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;

import javax.swing.filechooser.FileNameExtensionFilter;
import juego.Coordenada;
import juego.Nivel;

/**
 *
 * @author Robert Hernandez>
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    LinkedList<Token> lista1;
    LinkedList<Token2> lista;
    LinkedList<Nivel> listaNiveles = new LinkedList<>();
    LinkedList<Integer> listaInstrucciones = new LinkedList<>();// lista de piezas

    public VentanaPrincipal() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        Analizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaArchivo1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelSintexto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButtonAnalizarArchivo2 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBoxNivelSeleccionado = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaArchivo2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        jLabel3.setText("jLabel3");

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Analizar.setText("Analizar Archivo1");
        Analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalizarActionPerformed(evt);
            }
        });

        jTextAreaArchivo1.setColumns(10);
        jTextAreaArchivo1.setRows(5);
        jTextAreaArchivo1.setAutoscrolls(false);
        jScrollPane2.setViewportView(jTextAreaArchivo1);

        jLabel1.setText("Texto 1");

        jLabel2.setText("Texto 2");

        jButton1.setText("Jugar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonAnalizarArchivo2.setText("Analizar Archivo2");
        jButtonAnalizarArchivo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnalizarArchivo2ActionPerformed(evt);
            }
        });

        jButton2.setText("Cargar Niveles");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextAreaArchivo2.setColumns(10);
        jTextAreaArchivo2.setRows(5);
        jTextAreaArchivo2.setAutoscrolls(false);
        jScrollPane4.setViewportView(jTextAreaArchivo2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabelSintexto)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1)
                                    .addComponent(jComboBoxNivelSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(69, 69, 69))
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Analizar)
                        .addGap(130, 130, 130)
                        .addComponent(jButtonAnalizarArchivo2)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelSintexto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxNivelSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Analizar)
                            .addComponent(jButtonAnalizarArchivo2)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(172, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Archivo 1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Archivo2");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Reportes");

        jMenuItem3.setText("Reporte de Tokens archivo 1");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Reporte deTokens archivo 2");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Reporte Errores Archivo 1");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Reporte Errores Archivo 2");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ayuda");

        jMenuItem7.setText("Manual Usuario");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("Acerca De");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("Manual tecnico");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalizarActionPerformed
        AnalizadorLexico lex = new AnalizadorLexico();
        lista1 = lex.AnalizadorCadena(jTextAreaArchivo1.getText());
       lex.ReporteHtmlTokens();
       lex.ReporteHtmlErrores();
        
       
        
        
    }//GEN-LAST:event_AnalizarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        FileReader fr = null;
        String codigo = new String();
        try {

            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Trs", "trs");
            fileChooser.setFileFilter(filter);
            int seleccion = fileChooser.showDialog(jLabelSintexto, null);
            fr = new FileReader(fileChooser.getSelectedFile());
            BufferedReader entrada = new BufferedReader(fr);

            while (entrada.ready()) {
                codigo += entrada.readLine() + "\n";
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jTextAreaArchivo1.setText(codigo);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int fil = listaNiveles.get(jComboBoxNivelSeleccionado.getSelectedIndex()).getFilas();
        int col = listaNiveles.get(jComboBoxNivelSeleccionado.getSelectedIndex()).getColumnas();

        JFrame f = new JFrame("Tetris");

        f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        f.setSize(26 * col + 19, 26 * fil + 55);
        f.setVisible(true);

        final Tetris game = new Tetris(fil+1, col);
        game.setCoordenadasOcupadas(listaNiveles.get(jComboBoxNivelSeleccionado.getSelectedIndex()).getLista_coordenadas());
        game.setListaNumeros(listaInstrucciones);
        game.init();
        f.add(game);

        f.addKeyListener(new KeyListener() {
			public void keyTyped(KeyEvent e) {
			}
			
			public void keyPressed(KeyEvent e) {
				switch (e.getKeyCode()) {
				case KeyEvent.VK_UP:
					game.rotar(-1);
					break;
				case KeyEvent.VK_DOWN:
					game.rotar(+1);
					break;
				case KeyEvent.VK_LEFT:
					game.mover(-1);
					break;
				case KeyEvent.VK_RIGHT:
					game.mover(+1);
					break;
				case KeyEvent.VK_SPACE:
					game.dropDown();
					
					break;
				} 
			}
			
			public void keyReleased(KeyEvent e) {
			}
		});
        
        new Thread() {
			@Override public void run() {
				while (true) {
					try {
						Thread.sleep(1000-50*jComboBoxNivelSeleccionado.getSelectedIndex());
						game.dropDown();
					} catch ( InterruptedException e ) {}
				}
			}
		}.start();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAnalizarArchivo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnalizarArchivo2ActionPerformed
        AnalizadorLexico2 lex = new AnalizadorLexico2();
        lista = lex.AnalizadorCadena(jTextAreaArchivo2.getText());
        lex.ReporteHtmlTokens();
        lex.ReporteHtmlErrores();
        
    }//GEN-LAST:event_jButtonAnalizarArchivo2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        FileReader fr = null;
        String codigo = new String();
        try {

            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Pzs", "pzs");
            fileChooser.setFileFilter(filter);
            int seleccion = fileChooser.showDialog(jLabelSintexto, null);
            fr = new FileReader(fileChooser.getSelectedFile());
            BufferedReader entrada = new BufferedReader(fr);

            while (entrada.ready()) {
                codigo += entrada.readLine() + "\n";
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jTextAreaArchivo2.setText(codigo);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CargarNiveles(lista1);
        if (!listaNiveles.isEmpty()) {
            for (Nivel nivel : listaNiveles) {
                jComboBoxNivelSeleccionado.addItem(nivel.getNombre_nivel());
            }
        }
        CargarPiezas(lista);
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        abrirarchivo("ReporteTokens.html");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
         abrirarchivo("ReporteErroresArchivo1.html");
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        abrirarchivo("Reporte2Tokens.html");
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        abrirarchivo("ReporteErroresArchivo2.html");
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        abrirarchivo("ManualUsuario.pdf");
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        abrirarchivo("AcercaDe.pdf");
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        abrirarchivo("Manual_Tecnico.pdf");
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Analizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAnalizarArchivo2;
    private javax.swing.JComboBox jComboBoxNivelSeleccionado;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelSintexto;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextAreaArchivo1;
    private javax.swing.JTextArea jTextAreaArchivo2;
    // End of variables declaration//GEN-END:variables

    private void CargarNiveles(LinkedList<Token> lista) {
        int cantidad_niveles = 0;
        int tamanio_tablero = 0;
        String nombre_nivel;
        int n;
        int p;

        for (int i = 0; i < lista.size(); i++) {
            if (i == 0) {
                cantidad_niveles = Integer.parseInt(lista.get(i).getValor());
            } else {
                String tipoDato = lista.get(i).getTipoString();

                switch (tipoDato) {
                    case "Numero_entero":
                        Nivel nivel_temp = new Nivel();
                        n = Integer.parseInt(lista.get(i).getValor());
                        i = i + 2;
                        p = Integer.parseInt(lista.get(i).getValor());
                        i++;
                        nombre_nivel = lista.get(i).getValor();
                        nivel_temp.setNombre_nivel(nombre_nivel);
                        nivel_temp.setFilas(n);
                        nivel_temp.setColumnas(p);
                        i++;
                        for (int f = 0; f < n; f++) {
                            for (int c = 0; c < p; c++) {
                                if (lista.get(i).getTipoString().equals("asterisco")) {
                                    nivel_temp.getLista_coordenadas().add(new Coordenada(f, c));
                                }
                                i++;
                            }

                        }
                        listaNiveles.add(nivel_temp);
                        i--;
                        break;
                    case "Comentario":
                        
                        break;
                    
                    

                    default:

                        break;

                }

            }

        }

    }

    private void CargarPiezas(LinkedList<Token2> lista) {
        int estado = 0;
        for (int i = 0; i < lista.size(); i++) {
            switch (lista.get(i).getTipoString()) {
                case "I":
                    estado = 1;
                    i = i + 2;
                    break;
                case "J":
                    estado = 2;
                    i = i + 2;
                    break;
                case "L":
                    estado = 3;
                    i = i + 2;
                    break;
                case "O":
                    estado = 4;
                    i = i + 2;
                    break;
                case "S":
                    estado = 5;
                    i = i + 2;
                    break;
                case "Z":
                    estado = 6;
                    i = i + 2;
                    break;
                case "T":
                    estado = 7;
                    i = i + 2;
                    break;
                default:
                    System.out.println("Error");
                    break;
            }

            switch (estado) {
                case 1:
                    if (lista.get(i).getValor().equals("^") || lista.get(i).getValor().equals("v")){
                    listaInstrucciones.add(7);
                    }
                    if (lista.get(i).getValor().equals("<") || lista.get(i).getValor().equals(">")){
                    listaInstrucciones.add(0);
                    }
                   
                    break;
                case 2://J
                    if (lista.get(i).getValor().equals("^")){
                    listaInstrucciones.add(11);
                    }
                    if (lista.get(i).getValor().equals("v")){
                    listaInstrucciones.add(13);
                    }
                    if (lista.get(i).getValor().equals("<")){
                    listaInstrucciones.add(2);
                    }
                    if (lista.get(i).getValor().equals(">")){
                    listaInstrucciones.add(12);
                    }
                    
                    break;
                case 3: // L
                    if (lista.get(i).getValor().equals("^")){
                    listaInstrucciones.add(8);
                    }
                    if (lista.get(i).getValor().equals("v")){
                    listaInstrucciones.add(10);
                    }
                    if (lista.get(i).getValor().equals("<")){
                    listaInstrucciones.add(1);
                    }
                    if (lista.get(i).getValor().equals(">")){
                    listaInstrucciones.add(9);
                    }
                   
                    break;
                case 4://O
                    listaInstrucciones.add(3);
                   
                    break;
                case 5:// S
                    if (lista.get(i).getValor().equals("^")||lista.get(i).getValor().equals("v")){
                    listaInstrucciones.add(4);
                    }
                    if (lista.get(i).getValor().equals("<")||lista.get(i).getValor().equals(">")){
                    listaInstrucciones.add(14);
                    }
                   
                    break;
                case 6: // Z
                    if (lista.get(i).getValor().equals("^")||lista.get(i).getValor().equals("v")){
                    listaInstrucciones.add(6);
                    }
                    if (lista.get(i).getValor().equals("<")||lista.get(i).getValor().equals(">")){
                    listaInstrucciones.add(18);
                    }
                 
                    break;
                case 7:// T
                    if (lista.get(i).getValor().equals("^")){
                    listaInstrucciones.add(16);
                    }
                    if (lista.get(i).getValor().equals("v")){
                    listaInstrucciones.add(5);
                    }
                    if (lista.get(i).getValor().equals("<")){
                    listaInstrucciones.add(15);
                    }
                    if (lista.get(i).getValor().equals(">")){
                    listaInstrucciones.add(17);
                    }
                   
                   
                    break;
            }

        }
    }
    public void abrirarchivo(String archivo){

     try {

            File objetofile = new File (archivo);
            Desktop.getDesktop().open(objetofile);

     }catch (IOException ex) {

            System.out.println(ex);

     }

} 
}
